%%s 0/0/0
%%d D 1.1 13-Aug-24 11:56:07 tkb 1 0
%%c Initial checkin.
%%T
%%I 1
###############################################################################
## 
## Program:   	D A T E _ T I M E . S D C L
## Written By:	Thomas Kurt Bond
##
## Description:	Date and time pretty printer.
##
## History:
## Ver     When    Who  What
## 1.00a   ??????  tkb  Initial version
## 2.0     051989  tkb  Convert to new SDCL syntax and add verify handling
###############################################################################
    verifying = 'f$verify(f$type(date_time_verify) .nes. "")'
    !> DATE_TIME.SDCL -- Date and time pretty printer.
    true = (1 .eq. 1)
    false = .not. true
    wso := write sys$output
    inq := inquire/nopun

    on warning then exit (1 .or. (f$verify(verifying) .and. 0))

    debug = true
    format = "The date is !AS, !AS !AS!AS, !AS. The time is !AS !AS."
    ##Saturday, January 12th, 1986, time, am/pm 
    months = "January-February-March-April-May-June-" + \
	     "July-August-September-October-November-December"

    if (p1 .eqs. "") 
        work_time = f$cvtime(,"ABSOLUTE")
    else
        work_time = p1

    month_day = f$cvtime(work_time, "absolute", "day")
    week_day  = f$cvtime(work_time, "absolute", "weekday")
    month     = f$cvtime(work_time, "comparison", "month")
    year      = f$cvtime(work_time, "absolute", "year")
    hour      = f$cvtime(work_time, "absolute", "hour")
    minute    = f$cvtime(work_time, "absolute", "minute")
    second    = f$cvtime(work_time, "absolute", "second")
    hundredth = f$cvtime(work_time, "absolute", "hundredth")

    day	      = f$integer(month_day)
    day_tag   = "th"
    if (day .eq. 1 .or. day .eq. 21 .or. day .eq. 31)
        day_tag = "st"
    if (day .eq. 2 .or. day .eq. 22)
        day_tag = "nd"
    if (day .eq. 3 .or. day .eq. 23)
        day_tag = "rd"

    hour_int  = f$integer(hour)
    if (hour_int .gt. 12) {       
        hour = f$string(hour_int - 12)
        am_pm = "pm"
    } else {
        hour = f$string(hour_int)	#Gets rid of leading zeros 
        am_pm = "am"
    }

    wso f$fao(format, week_day, f$element(f$integer(month) - 1, "-", months),\
        month_day, day_tag, year, hour+":"+minute, am_pm)

The_End:
    exit (1 .or. (f$verify(verifying) .and. 0))
%%E 1
