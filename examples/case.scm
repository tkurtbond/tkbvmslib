(define (upcase s)
  (let* ((s (if (symbol? s) (symbol->string s) s))
         (l (string-length s))
         (t (make-string l)))
    (do ((i 0 (+ i 1)))
        ((= i l) t)
      (let* ((c (string-ref s i))
             (c (if (char-lower-case? c) (char-upcase c) c)))
        (string-set! t i c)))))


(define (downcase s)
  (let* ((s (if (symbol? s) (symbol->string s) s))
         (l (string-length s))
         (t (make-string l)))
    (do ((i 0 (+ i 1)))
        ((= i l) t)
      (let* ((c (string-ref s i))
             (c (if (char-upper-case? c) (char-downcase c) c)))
        (string-set! t i c)))))
